// Code generated by reactGen. DO NOT EDIT.

package react

// BRProps defines the properties for the <br> element
type BRProps struct {
	ClassName               string
	DangerouslySetInnerHTML *DangerousInnerHTMLDef
	ID                      string
	Key                     string

	OnChange
	OnClick
	OnMouseDown
	OnMouseEnter
	OnMouseLeave
	OnMouseMove
	OnMouseOut
	OnMouseOver
	OnMouseUp

	Role  string
	Style *CSS
	Title string
}

func (b *BRProps) assign(v *_BRProps) {

	v.ClassName = b.ClassName

	v.DangerouslySetInnerHTML = b.DangerouslySetInnerHTML

	if b.ID != "" {
		v.ID = b.ID
	}

	if b.Key != "" {
		v.Key = b.Key
	}

	if b.OnChange != nil {
		v.o.Set("onChange", b.OnChange.OnChange)
	}

	if b.OnClick != nil {
		v.o.Set("onClick", b.OnClick.OnClick)
	}

	if b.OnMouseDown != nil {
		v.o.Set("onMouseDown", b.OnMouseDown.OnMouseDown)
	}

	if b.OnMouseEnter != nil {
		v.o.Set("onMouseEnter", b.OnMouseEnter.OnMouseEnter)
	}

	if b.OnMouseLeave != nil {
		v.o.Set("onMouseLeave", b.OnMouseLeave.OnMouseLeave)
	}

	if b.OnMouseMove != nil {
		v.o.Set("onMouseMove", b.OnMouseMove.OnMouseMove)
	}

	if b.OnMouseOut != nil {
		v.o.Set("onMouseOut", b.OnMouseOut.OnMouseOut)
	}

	if b.OnMouseOver != nil {
		v.o.Set("onMouseOver", b.OnMouseOver.OnMouseOver)
	}

	if b.OnMouseUp != nil {
		v.o.Set("onMouseUp", b.OnMouseUp.OnMouseUp)
	}

	v.Role = b.Role

	// TODO: until we have a resolution on
	// https://github.com/gopherjs/gopherjs/issues/236
	v.Style = b.Style.hack()

	v.Title = b.Title

}
