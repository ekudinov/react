// Code generated by reactGen. DO NOT EDIT.

package react

// ThProps defines the properties for the <th> element
type ThProps struct {
	ClassName               string
	DangerouslySetInnerHTML *DangerousInnerHTMLDef
	ID                      string
	Key                     string

	OnChange
	OnClick
	OnMouseDown
	OnMouseEnter
	OnMouseLeave
	OnMouseMove
	OnMouseOut
	OnMouseOver
	OnMouseUp

	Role  string
	Style *CSS
	Title string
}

func (t *ThProps) assign(v *_ThProps) {

	v.ClassName = t.ClassName

	v.DangerouslySetInnerHTML = t.DangerouslySetInnerHTML

	if t.ID != "" {
		v.ID = t.ID
	}

	if t.Key != "" {
		v.Key = t.Key
	}

	if t.OnChange != nil {
		v.o.Set("onChange", t.OnChange.OnChange)
	}

	if t.OnClick != nil {
		v.o.Set("onClick", t.OnClick.OnClick)
	}

	if t.OnMouseDown != nil {
		v.o.Set("onMouseDown", t.OnMouseDown.OnMouseDown)
	}

	if t.OnMouseEnter != nil {
		v.o.Set("onMouseEnter", t.OnMouseEnter.OnMouseEnter)
	}

	if t.OnMouseLeave != nil {
		v.o.Set("onMouseLeave", t.OnMouseLeave.OnMouseLeave)
	}

	if t.OnMouseMove != nil {
		v.o.Set("onMouseMove", t.OnMouseMove.OnMouseMove)
	}

	if t.OnMouseOut != nil {
		v.o.Set("onMouseOut", t.OnMouseOut.OnMouseOut)
	}

	if t.OnMouseOver != nil {
		v.o.Set("onMouseOver", t.OnMouseOver.OnMouseOver)
	}

	if t.OnMouseUp != nil {
		v.o.Set("onMouseUp", t.OnMouseUp.OnMouseUp)
	}

	v.Role = t.Role

	// TODO: until we have a resolution on
	// https://github.com/gopherjs/gopherjs/issues/236
	v.Style = t.Style.hack()

	v.Title = t.Title

}
