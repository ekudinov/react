// Code generated by reactGen. DO NOT EDIT.

package react

// NavProps defines the properties for the <nav> element
type NavProps struct {
	ClassName               string
	DangerouslySetInnerHTML *DangerousInnerHTMLDef
	ID                      string
	Key                     string

	OnChange
	OnClick
	OnMouseDown
	OnMouseEnter
	OnMouseLeave
	OnMouseMove
	OnMouseOut
	OnMouseOver
	OnMouseUp

	Role  string
	Style *CSS
	Title string
}

func (n *NavProps) assign(v *_NavProps) {

	v.ClassName = n.ClassName

	v.DangerouslySetInnerHTML = n.DangerouslySetInnerHTML

	if n.ID != "" {
		v.ID = n.ID
	}

	if n.Key != "" {
		v.Key = n.Key
	}

	if n.OnChange != nil {
		v.o.Set("onChange", n.OnChange.OnChange)
	}

	if n.OnClick != nil {
		v.o.Set("onClick", n.OnClick.OnClick)
	}

	if n.OnMouseDown != nil {
		v.o.Set("onMouseDown", n.OnMouseDown.OnMouseDown)
	}

	if n.OnMouseEnter != nil {
		v.o.Set("onMouseEnter", n.OnMouseEnter.OnMouseEnter)
	}

	if n.OnMouseLeave != nil {
		v.o.Set("onMouseLeave", n.OnMouseLeave.OnMouseLeave)
	}

	if n.OnMouseMove != nil {
		v.o.Set("onMouseMove", n.OnMouseMove.OnMouseMove)
	}

	if n.OnMouseOut != nil {
		v.o.Set("onMouseOut", n.OnMouseOut.OnMouseOut)
	}

	if n.OnMouseOver != nil {
		v.o.Set("onMouseOver", n.OnMouseOver.OnMouseOver)
	}

	if n.OnMouseUp != nil {
		v.o.Set("onMouseUp", n.OnMouseUp.OnMouseUp)
	}

	v.Role = n.Role

	// TODO: until we have a resolution on
	// https://github.com/gopherjs/gopherjs/issues/236
	v.Style = n.Style.hack()

	v.Title = n.Title

}
