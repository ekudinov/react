// Code generated by reactGen. DO NOT EDIT.

package react

// ImgProps defines the properties for the <label> element
type ImgProps struct {
	Align                   string
	Alt                     string
	Border                  string
	ClassName               string
	DangerouslySetInnerHTML *DangerousInnerHTMLDef
	Height                  string
	Hspace                  string
	ID                      string
	Ismap                   string
	Key                     string
	Longdesc                string
	Lowsrc                  string

	OnChange
	OnClick
	OnMouseDown
	OnMouseEnter
	OnMouseLeave
	OnMouseMove
	OnMouseOut
	OnMouseOver
	OnMouseUp

	Role   string
	Src    string
	Style  *CSS
	Title  string
	Usemap string
	Vspace string
	Width  string
}

func (i *ImgProps) assign(v *_ImgProps) {

	v.Align = i.Align

	v.Alt = i.Alt

	v.Border = i.Border

	v.ClassName = i.ClassName

	v.DangerouslySetInnerHTML = i.DangerouslySetInnerHTML

	v.Height = i.Height

	v.Hspace = i.Hspace

	if i.ID != "" {
		v.ID = i.ID
	}

	v.Ismap = i.Ismap

	if i.Key != "" {
		v.Key = i.Key
	}

	v.Longdesc = i.Longdesc

	v.Lowsrc = i.Lowsrc

	if i.OnChange != nil {
		v.o.Set("onChange", i.OnChange.OnChange)
	}

	if i.OnClick != nil {
		v.o.Set("onClick", i.OnClick.OnClick)
	}

	if i.OnMouseDown != nil {
		v.o.Set("onMouseDown", i.OnMouseDown.OnMouseDown)
	}

	if i.OnMouseEnter != nil {
		v.o.Set("onMouseEnter", i.OnMouseEnter.OnMouseEnter)
	}

	if i.OnMouseLeave != nil {
		v.o.Set("onMouseLeave", i.OnMouseLeave.OnMouseLeave)
	}

	if i.OnMouseMove != nil {
		v.o.Set("onMouseMove", i.OnMouseMove.OnMouseMove)
	}

	if i.OnMouseOut != nil {
		v.o.Set("onMouseOut", i.OnMouseOut.OnMouseOut)
	}

	if i.OnMouseOver != nil {
		v.o.Set("onMouseOver", i.OnMouseOver.OnMouseOver)
	}

	if i.OnMouseUp != nil {
		v.o.Set("onMouseUp", i.OnMouseUp.OnMouseUp)
	}

	v.Role = i.Role

	v.Src = i.Src

	// TODO: until we have a resolution on
	// https://github.com/gopherjs/gopherjs/issues/236
	v.Style = i.Style.hack()

	v.Title = i.Title

	v.Usemap = i.Usemap

	v.Vspace = i.Vspace

	v.Width = i.Width

}
