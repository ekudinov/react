// Code generated by reactGen. DO NOT EDIT.

package react

// PreProps defines the properties for the <pre> element
type PreProps struct {
	ClassName               string
	DangerouslySetInnerHTML *DangerousInnerHTMLDef
	ID                      string
	Key                     string

	OnChange
	OnClick
	OnMouseDown
	OnMouseEnter
	OnMouseLeave
	OnMouseMove
	OnMouseOut
	OnMouseOver
	OnMouseUp

	Role  string
	Style *CSS
	Title string
}

func (p *PreProps) assign(v *_PreProps) {

	v.ClassName = p.ClassName

	v.DangerouslySetInnerHTML = p.DangerouslySetInnerHTML

	if p.ID != "" {
		v.ID = p.ID
	}

	if p.Key != "" {
		v.Key = p.Key
	}

	if p.OnChange != nil {
		v.o.Set("onChange", p.OnChange.OnChange)
	}

	if p.OnClick != nil {
		v.o.Set("onClick", p.OnClick.OnClick)
	}

	if p.OnMouseDown != nil {
		v.o.Set("onMouseDown", p.OnMouseDown.OnMouseDown)
	}

	if p.OnMouseEnter != nil {
		v.o.Set("onMouseEnter", p.OnMouseEnter.OnMouseEnter)
	}

	if p.OnMouseLeave != nil {
		v.o.Set("onMouseLeave", p.OnMouseLeave.OnMouseLeave)
	}

	if p.OnMouseMove != nil {
		v.o.Set("onMouseMove", p.OnMouseMove.OnMouseMove)
	}

	if p.OnMouseOut != nil {
		v.o.Set("onMouseOut", p.OnMouseOut.OnMouseOut)
	}

	if p.OnMouseOver != nil {
		v.o.Set("onMouseOver", p.OnMouseOver.OnMouseOver)
	}

	if p.OnMouseUp != nil {
		v.o.Set("onMouseUp", p.OnMouseUp.OnMouseUp)
	}

	v.Role = p.Role

	// TODO: until we have a resolution on
	// https://github.com/gopherjs/gopherjs/issues/236
	v.Style = p.Style.hack()

	v.Title = p.Title

}
